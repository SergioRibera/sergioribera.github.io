[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"

[tasks.default]
alias = "check"

[tasks.docs]
description = "Generate docs"
command = "cargo"
args = ["doc", "--all"]

[tasks.upload-docs]
description = "Upload docs"
command = "cargo"
args = ["doc-upload"]

[tasks.clean]
description = "Clean all target directory"
command = "cargo"
args = ["clean"]

[tasks.fmt]
description = "Check format quality"
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.fix-fmt]
description = "Fix format"
command = "cargo"
args = ["fmt", "--all"]

[tasks.clippy]
description = "Check code quality"
env_files = [".env.dev"]
command = "cargo"
args = ["clippy", "--", "-D", "warnings"]

[tasks.fix-clippy]
description = "Fix code quality"
env_files = [".env.dev"]
command = "cargo"
args = ["fix", "--allow-dirty"]

[tasks.test]
description = "Check all unit test"
env_files = [".env.dev"]
command = "cargo"
args = ["test"]
dependencies = ["fmt", "clippy"]

[tasks.check]
description = "Check all issues, format and code quality"
dependencies = ["fmt", "clippy", "test"]

[tasks.fix-all]
description = "Try fix all clippy and format issues"
dependencies = ["fix-fmt", "fix-clippy"]

[tasks.build]
description = "Generate release binary/lib"
dependencies = [
    "fmt",
    "clippy",
    "test",
    "release-build-service",
    "release-build-web",
]

[tasks.dev]
dependencies = ["run-service", "run-web"]

[tasks.publish]
dependencies = ["fmt", "clippy", "test"]
script.pre = "mold -run cargo release --workspace --execute ${@}"
script.main = """
docker build -t --mount=type=secret,id=my_env,dst=/etc/secrets/my_env portfolio_service:$CARGO_MAKE_CRATE_VERSION -f Dockerfile.service . && \
docker build -t portfolio_static:$CARGO_MAKE_CRATE_VERSION -f Dockerfile.web .
"""
script.post = """
fly deploy -a portfolio-back -i portfolio_service:$CARGO_MAKE_CRATE_VERSION --now && \
fly deploy -a portfolio-front -i portfolio_satatic:$CARGO_MAKE_CRATE_VERSION --now
"""
